"use strict";(self.webpackChunkaws_cheatsheet=self.webpackChunkaws_cheatsheet||[]).push([[999],{7653:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"database/dynamodb","title":"AWS DynamoDB","description":"What is it","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/database/dynamodb.md","sourceDirName":"database","slug":"/database/dynamodb","permalink":"/aws-cheatsheet/docs/database/dynamodb","draft":false,"unlisted":false,"editUrl":"https://github.com/EmersonBraun/aws-cheatsheet/blob/master/docs/database/dynamodb.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"AWS DocumentDB","permalink":"/aws-cheatsheet/docs/database/documentdb"},"next":{"title":"AWS ElastiCache","permalink":"/aws-cheatsheet/docs/database/elasticache"}}');var t=s(4848),i=s(8453);const o={sidebar_position:3},r="AWS DynamoDB",l={},c=[{value:"What is it",id:"what-is-it",level:2},{value:"What it&#39;s for",id:"what-its-for",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Key points",id:"key-points",level:2},{value:"Comparison",id:"comparison",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"aws-dynamodb",children:"AWS DynamoDB"})}),"\n",(0,t.jsx)(n.h2,{id:"what-is-it",children:"What is it"}),"\n",(0,t.jsx)(n.p,{children:"A fully managed NoSQL database service that provides fast and predictable performance with seamless scalability."}),"\n",(0,t.jsx)(n.h2,{id:"what-its-for",children:"What it's for"}),"\n",(0,t.jsx)(n.p,{children:"Storing and retrieving any amount of data, serving any level of request traffic, with consistent, single-digit millisecond latency."}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Mobile applications"}),"\n",(0,t.jsx)(n.li,{children:"Gaming applications"}),"\n",(0,t.jsx)(n.li,{children:"IoT applications"}),"\n",(0,t.jsx)(n.li,{children:"Real-time bidding"}),"\n",(0,t.jsx)(n.li,{children:"Ad tech applications"}),"\n",(0,t.jsx)(n.li,{children:"Session management"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-points",children:"Key points"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Serverless:"})," No servers to manage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalability:"})," Automatic scaling of throughput and storage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance:"})," Single-digit millisecond latency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Durability:"})," Automatic replication across multiple AZs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security:"})," Encryption at rest and in transit"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"comparison",children:"Comparison"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AWS DynamoDB vs. MongoDB:"})," DynamoDB is a fully managed NoSQL database service with automatic scaling and predictable performance. MongoDB is a document database that can be self-managed or used as a service. DynamoDB is ideal for applications that need predictable performance and automatic scaling, while MongoDB is better for applications that need more flexible querying capabilities or document-based data modeling."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var a=s(6540);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);