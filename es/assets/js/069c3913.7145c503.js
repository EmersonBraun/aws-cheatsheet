"use strict";(self.webpackChunkaws_cheatsheet=self.webpackChunkaws_cheatsheet||[]).push([[5353],{3326:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"front-end/appsync","title":"AWS AppSync","description":"Qu\xe9 es","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/front-end/appsync.md","sourceDirName":"front-end","slug":"/front-end/appsync","permalink":"/aws-cheatsheet/es/docs/front-end/appsync","draft":false,"unlisted":false,"editUrl":"https://github.com/EmersonBraun/aws-cheatsheet/blob/master/docs/front-end/appsync.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Amazon API Gateway","permalink":"/aws-cheatsheet/es/docs/front-end/api-gateway"},"next":{"title":"AWS Amplify","permalink":"/aws-cheatsheet/es/docs/front-end/amplify"}}');var i=s(4848),r=s(8453);const t={sidebar_position:5},c="AWS AppSync",o={},l=[{value:"Qu\xe9 es",id:"qu\xe9-es",level:2},{value:"Para qu\xe9 sirve",id:"para-qu\xe9-sirve",level:2},{value:"Casos de uso",id:"casos-de-uso",level:2},{value:"Puntos clave",id:"puntos-clave",level:2},{value:"Comparaci\xf3n",id:"comparaci\xf3n",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"aws-appsync",children:"AWS AppSync"})}),"\n",(0,i.jsx)(n.h2,{id:"qu\xe9-es",children:"Qu\xe9 es"}),"\n",(0,i.jsx)(n.p,{children:"Un servicio administrado que utiliza GraphQL para facilitar el desarrollo de APIs que permiten a las aplicaciones obtener exactamente los datos que necesitan."}),"\n",(0,i.jsx)(n.h2,{id:"para-qu\xe9-sirve",children:"Para qu\xe9 sirve"}),"\n",(0,i.jsx)(n.p,{children:"Crear APIs GraphQL escalables que simplifican el desarrollo de aplicaciones al permitir que estas accedan y combinen datos de m\xfaltiples fuentes."}),"\n",(0,i.jsx)(n.h2,{id:"casos-de-uso",children:"Casos de uso"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"APIs GraphQL"}),"\n",(0,i.jsx)(n.li,{children:"Aplicaciones en tiempo real"}),"\n",(0,i.jsx)(n.li,{children:"Aplicaciones offline"}),"\n",(0,i.jsx)(n.li,{children:"Sincronizaci\xf3n de datos"}),"\n",(0,i.jsx)(n.li,{children:"Agregaci\xf3n de datos"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"puntos-clave",children:"Puntos clave"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GraphQL:"})," Lenguaje de consulta flexible y eficiente"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tiempo real:"})," Actualizaciones en tiempo real con WebSocket"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Offline:"})," Sincronizaci\xf3n autom\xe1tica de datos offline"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Seguridad:"})," Autenticaci\xf3n y autorizaci\xf3n integradas"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integraci\xf3n:"})," Conexi\xf3n con m\xfaltiples fuentes de datos"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"comparaci\xf3n",children:"Comparaci\xf3n"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AWS AppSync vs. API Gateway:"})," AppSync es un servicio especializado en GraphQL que ofrece capacidades avanzadas de tiempo real y sincronizaci\xf3n offline. API Gateway es un servicio m\xe1s general para APIs REST y HTTP. AppSync es ideal para aplicaciones que necesitan GraphQL y caracter\xedsticas avanzadas de tiempo real, mientras que API Gateway es mejor para APIs REST tradicionales y casos de uso m\xe1s generales."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var a=s(6540);const i={},r=a.createContext(i);function t(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);